### Trả về các package_id trống
fetch('http://localhost:4000/room/available', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({
    checkin_date: '2025-06-10',
    checkout_date: '2025-06-15'
  })
});

### Lấy dữ liệu phòng cho hiển thị
fetch('http://localhost:4000/room/all', {
  method: 'GET',
  headers: {
    'Content-Type': 'application/json'
  }
});

### tính toán tiền phòng
fetch('http://localhost:4000/calculation', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({
  "room_type_id": 1,
  "room_package_id": 2,
  "n_domestic_guests": 2,
  "n_foreign_guests": 1,
  "total_days": 3
})
});

### Đăt phòng
fetch("http://localhost:4000/booking", {
  method: "POST",
  headers: {
    "Content-Type": "application/json"
  },
  body: JSON.stringify({
    full_name: "Nguyen a",
    email: "a@gmail.com",
    phone: "0912345678",
    arrival_time: "14:00",
    special_requests: "Không hút thuốc",
    room_package_id: 2,
    n_domestic_guests: 2,
    n_foreign_guests: 1,
    check_in_date: "2025-06-10T12:00:00Z",
    check_out_date: "2025-06-12T12:00:00Z"
  })
})
  .then(response => response.json())
  .then(data => console.log("Kết quả:", data))
  .catch(error => console.error("Lỗi:", error));


### Xem lịch sử đặt phòng
fetch('http://localhost:4000/booking/history', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ email: 'guest@example.com' })
})
  .then(res => res.json())
  .then(data => console.log('Booking history:', data));
  
  
### Hủy phòng đã đặt
await fetch('http://localhost:4000/booking/cancel', {
  method: 'DELETE',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ reservation_id: 123 })
});

### Lấy chính sách phụ thu
fetch('http://localhost:4000/policy/get', {
  method: 'GET',
  headers: { 'Content-Type': 'application/json' }
})
  .then(res => res.json())
  .then(data => console.log('Danh sách chính sách:', data));




========================= NTD =========================


### đăng ký user mới
fetch('http://localhost:4000/api/register-user', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    username: 'huydeptrai111',
    password: 'Abc123@@',
    fullName: 'Nguyễn Văn Đại',
    email: 'hvo6471@gmail.com',
    phone: '0987654321',
    role: 'guest'
  })
})
  .then(res => res.json())
  .then(data => console.log('Kết quả đăng ký:', data));
  
  
### Đăng nhập
fetch('http://localhost:4000/api/login-user', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    email: 'hvo6471@gmail.com',
    password: 'Abc123@@',
    rememberMe: true // hoặc false nếu không muốn lưu session lâu dài
  })
})
  .then(res => res.json())
  .then(data => console.log('Kết quả đăng nhập:', data));


### Đăng xuất
fetch('http://localhost:4000/api/logout', {
  method: 'GET',
  credentials: 'include' // để gửi cookie session lên server
})
  .then(res => res.json())
  .then(data => console.log('Kết quả logout:', data))
  .catch(err => console.error('Lỗi logout:', err));


### Kiểm tra session
fetch('http://localhost:4000/api/check-session', {
  method: 'GET',
  credentials: 'include' // để gửi cookie session lên server
})
  .then(res => res.json())
  .then(data => {
    if (data.loggedIn) {
      console.log('Người dùng đã đăng nhập:', data.user);
    } else {
      console.warn('Chưa đăng nhập:', data.error);
    }
  })
  .catch(err => console.error('Lỗi khi kiểm tra session:', err));


### Lấy quyền chủ khách sạn
fetch('http://localhost:4000/api/admin-only', {
  method: 'GET',
  credentials: 'include' // bắt buộc có để gửi cookie session lên
})
  .then(res => {
    if (!res.ok) throw new Error('Không có quyền truy cập');
    return res.text();
  })
  .then(data => console.log('Phản hồi admin:', data))
  .catch(err => console.error('Lỗi admin-only:', err.message));
  
  
### Lấy quyền lễ tân
fetch('http://localhost:4000/api/receptionist-only', {
  method: 'GET',
  credentials: 'include'
})
  .then(res => {
    if (!res.ok) throw new Error('Không có quyền truy cập');
    return res.text();
  })
  .then(data => console.log('Phản hồi lễ tân:', data))
  .catch(err => console.error('Lỗi receptionist-only:', err.message));

